{"ast":null,"code":"var _jsxFileName = \"D:\\\\work\\\\Tushar-Project\\\\src\\\\components\\\\movie-list\\\\MovieList.jsx\",\n  _s = $RefreshSig$();\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './movie-list.scss';\nimport { SwiperSlide, Swiper } from 'swiper/react';\nimport tmdbApi, { category } from '../../api/tmdbApi';\nimport MovieCard from '../movie-card/MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = props => {\n  _s();\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    const getList = async () => {\n      let response = null;\n      const params = {};\n      if (props.type !== 'similar') {\n        switch (props.category) {\n          case category.movie:\n            response = await tmdbApi.getMoviesList(props.type, {\n              params\n            });\n            break;\n          default:\n            response = await tmdbApi.getTvList(props.type, {\n              params\n            });\n        }\n      } else {\n        response = await tmdbApi.similar(props.category, props.id);\n      }\n      setItems(response.results);\n    };\n    getList();\n  }, [props.category, props.id, props.type]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list\",\n    children: /*#__PURE__*/_jsxDEV(Swiper, {\n      grabCursor: true,\n      spaceBetween: 10,\n      slidesPerView: 'auto',\n      children: items.map((item, i) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: /*#__PURE__*/_jsxDEV(MovieCard, {\n          item: item,\n          category: props.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieList, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n_c = MovieList;\nMovieList.propTypes = {\n  category: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","SwiperSlide","Swiper","tmdbApi","category","MovieCard","MovieList","props","items","setItems","getList","response","params","type","movie","getMoviesList","getTvList","similar","id","results","map","item","i","propTypes","string","isRequired"],"sources":["D:/work/Tushar-Project/src/components/movie-list/MovieList.jsx"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './movie-list.scss';\r\n\r\nimport { SwiperSlide, Swiper } from 'swiper/react';\r\n\r\n\r\nimport tmdbApi, { category } from '../../api/tmdbApi';\r\n\r\nimport MovieCard from '../movie-card/MovieCard';\r\n\r\nconst MovieList = props => {\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getList = async () => {\r\n            let response = null;\r\n            const params = {};\r\n\r\n            if (props.type !== 'similar') {\r\n                switch(props.category) {\r\n                    case category.movie:\r\n                        response = await tmdbApi.getMoviesList(props.type, {params});\r\n                        break;\r\n                    default:\r\n                        response = await tmdbApi.getTvList(props.type, {params});\r\n                }\r\n            } else {\r\n                response = await tmdbApi.similar(props.category, props.id);\r\n            }\r\n            setItems(response.results);\r\n        }\r\n        getList();\r\n    }, [props.category, props.id, props.type]);\r\n\r\n    return (\r\n        <div className=\"movie-list\">\r\n            <Swiper\r\n                grabCursor={true}\r\n                spaceBetween={10}\r\n                slidesPerView={'auto'}\r\n            >\r\n                {\r\n                    items.map((item, i) => (\r\n                        <SwiperSlide key={i}>\r\n                            <MovieCard item={item} category={props.category}/>\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovieList.propTypes = {\r\n    category: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default MovieList;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAO,mBAAmB;AAE1B,SAASC,WAAW,EAAEC,MAAM,QAAQ,cAAc;AAGlD,OAAOC,OAAO,IAAIC,QAAQ,QAAQ,mBAAmB;AAErD,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,MAAMC,SAAS,GAAGC,KAAK,IAAI;EAAA;EAEvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMW,OAAO,GAAG,YAAY;MACxB,IAAIC,QAAQ,GAAG,IAAI;MACnB,MAAMC,MAAM,GAAG,CAAC,CAAC;MAEjB,IAAIL,KAAK,CAACM,IAAI,KAAK,SAAS,EAAE;QAC1B,QAAON,KAAK,CAACH,QAAQ;UACjB,KAAKA,QAAQ,CAACU,KAAK;YACfH,QAAQ,GAAG,MAAMR,OAAO,CAACY,aAAa,CAACR,KAAK,CAACM,IAAI,EAAE;cAACD;YAAM,CAAC,CAAC;YAC5D;UACJ;YACID,QAAQ,GAAG,MAAMR,OAAO,CAACa,SAAS,CAACT,KAAK,CAACM,IAAI,EAAE;cAACD;YAAM,CAAC,CAAC;QAAC;MAErE,CAAC,MAAM;QACHD,QAAQ,GAAG,MAAMR,OAAO,CAACc,OAAO,CAACV,KAAK,CAACH,QAAQ,EAAEG,KAAK,CAACW,EAAE,CAAC;MAC9D;MACAT,QAAQ,CAACE,QAAQ,CAACQ,OAAO,CAAC;IAC9B,CAAC;IACDT,OAAO,EAAE;EACb,CAAC,EAAE,CAACH,KAAK,CAACH,QAAQ,EAAEG,KAAK,CAACW,EAAE,EAAEX,KAAK,CAACM,IAAI,CAAC,CAAC;EAE1C,oBACI;IAAK,SAAS,EAAC,YAAY;IAAA,uBACvB,QAAC,MAAM;MACH,UAAU,EAAE,IAAK;MACjB,YAAY,EAAE,EAAG;MACjB,aAAa,EAAE,MAAO;MAAA,UAGlBL,KAAK,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBACd,QAAC,WAAW;QAAA,uBACR,QAAC,SAAS;UAAC,IAAI,EAAED,IAAK;UAAC,QAAQ,EAAEd,KAAK,CAACH;QAAS;UAAA;UAAA;UAAA;QAAA;MAAE,GADpCkB,CAAC;QAAA;QAAA;QAAA;MAAA,QAGtB;IAAC;MAAA;MAAA;MAAA;IAAA;EAED;IAAA;IAAA;IAAA;EAAA,QACP;AAEd,CAAC;AAAA,GA1CKhB,SAAS;AAAA,KAATA,SAAS;AA4CfA,SAAS,CAACiB,SAAS,GAAG;EAClBnB,QAAQ,EAAEJ,SAAS,CAACwB,MAAM,CAACC,UAAU;EACrCZ,IAAI,EAAEb,SAAS,CAACwB,MAAM,CAACC;AAC3B,CAAC;AAED,eAAenB,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}