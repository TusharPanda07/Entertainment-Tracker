{"ast":null,"code":"var _jsxFileName = \"D:\\\\work\\\\Tushar-Project\\\\src\\\\components\\\\hero-slide\\\\HeroSlide.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport SwiperCore, { Autoplay } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport Button, { OutlineButton } from '../button/Button';\nimport Modal, { ModalContent } from '../modal/Modal';\nimport tmdbApi, { category, movieType } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\nimport './hero-slide.scss';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeroSlide = () => {\n  _s();\n  SwiperCore.use([Autoplay]);\n  const [movieItems, setMovieItems] = useState([]);\n  useEffect(() => {\n    const getMovies = async () => {\n      const params = {\n        page: 1\n      };\n      try {\n        const response = await tmdbApi.getMoviesList(movieType.popular, {\n          params\n        });\n        setMovieItems(response.results.slice(1, 4));\n        console.log(response);\n      } catch {\n        console.log('error');\n      }\n    };\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-slide\",\n    children: [/*#__PURE__*/_jsxDEV(Swiper, {\n      modules: [Autoplay],\n      grabCursor: true,\n      spaceBetween: 0,\n      slidesPerView: 1\n      // autoplay={{delay: 3000}}\n      ,\n      children: movieItems.map((item, i) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: _ref => {\n          let {\n            isActive\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(HeroSlideItem, {\n            item: item,\n            className: `${isActive ? 'active' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this);\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), movieItems.map((item, i) => /*#__PURE__*/_jsxDEV(TrailerModal, {\n      item: item\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 45\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(HeroSlide, \"v2ja/IALY/F/8AFwp1LDsPz/EqM=\");\n_c = HeroSlide;\nconst HeroSlideItem = props => {\n  _s2();\n  let hisrory = useHistory();\n  const item = props.item;\n  const background = apiConfig.originalImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\n  const setModalActive = async () => {\n    const modal = document.querySelector(`#modal_${item.id}`);\n    const videos = await tmdbApi.getVideos(category.movie, item.id);\n    if (videos.results.length > 0) {\n      const videSrc = 'https://www.youtube.com/embed/' + videos.results[0].key;\n      modal.querySelector('.modal__content > iframe').setAttribute('src', videSrc);\n    } else {\n      modal.querySelector('.modal__content').innerHTML = 'No trailer';\n    }\n    modal.classList.toggle('active');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `hero-slide__item ${props.className}`,\n    style: {\n      backgroundImage: `url(${background})`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-slide__item__content container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-slide__item__content__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overview\",\n          children: item.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btns\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => hisrory.push('/movie/' + item.id),\n            children: \"Watch now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(OutlineButton, {\n            onClick: setModalActive,\n            children: \"Watch trailer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-slide__item__content__poster\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: apiConfig.w500Image(item.poster_path),\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s2(HeroSlideItem, \"JdRvKuhMmRWQtVv8IgVX1b80ssM=\", false, function () {\n  return [useHistory];\n});\n_c2 = HeroSlideItem;\nconst TrailerModal = props => {\n  _s3();\n  const item = props.item;\n  const iframeRef = useRef(null);\n  const onClose = () => iframeRef.current.setAttribute('src', '');\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    active: false,\n    id: `modal_${item.id}`,\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      onClose: onClose,\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        ref: iframeRef,\n        width: \"100%\",\n        height: \"500px\",\n        title: \"trailer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n_s3(TrailerModal, \"HIHwOEFe13FUYgDPZ3BBEH738M4=\");\n_c3 = TrailerModal;\nexport default HeroSlide;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"HeroSlide\");\n$RefreshReg$(_c2, \"HeroSlideItem\");\n$RefreshReg$(_c3, \"TrailerModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","SwiperCore","Autoplay","Swiper","SwiperSlide","Button","OutlineButton","Modal","ModalContent","tmdbApi","category","movieType","apiConfig","useHistory","HeroSlide","use","movieItems","setMovieItems","getMovies","params","page","response","getMoviesList","popular","results","slice","console","log","map","item","i","isActive","HeroSlideItem","props","hisrory","background","originalImage","backdrop_path","poster_path","setModalActive","modal","document","querySelector","id","videos","getVideos","movie","length","videSrc","key","setAttribute","innerHTML","classList","toggle","className","backgroundImage","title","overview","push","w500Image","TrailerModal","iframeRef","onClose","current"],"sources":["D:/work/Tushar-Project/src/components/hero-slide/HeroSlide.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport SwiperCore, { Autoplay } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\nimport Button, { OutlineButton } from '../button/Button';\r\nimport Modal, { ModalContent } from '../modal/Modal';\r\n\r\nimport tmdbApi, { category, movieType } from '../../api/tmdbApi';\r\nimport apiConfig from '../../api/apiConfig';\r\n\r\nimport './hero-slide.scss';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst HeroSlide = () => {\r\n\r\n    SwiperCore.use([Autoplay]);\r\n\r\n    const [movieItems, setMovieItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getMovies = async () => {\r\n            const params = {page: 1}\r\n            try {\r\n                const response = await tmdbApi.getMoviesList(movieType.popular, {params});\r\n                setMovieItems(response.results.slice(1, 4));\r\n                console.log(response);\r\n            } catch {\r\n                console.log('error');\r\n            }\r\n        }\r\n        getMovies();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"hero-slide\">\r\n            <Swiper\r\n                modules={[Autoplay]}\r\n                grabCursor={true}\r\n                spaceBetween={0}\r\n                slidesPerView={1}\r\n                // autoplay={{delay: 3000}}\r\n            >\r\n                {\r\n                    movieItems.map((item, i) => (\r\n                        <SwiperSlide key={i}>\r\n                            {({ isActive }) => (\r\n                                <HeroSlideItem item={item} className={`${isActive ? 'active' : ''}`} />\r\n                            )}\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n            {\r\n                movieItems.map((item, i) => <TrailerModal key={i} item={item}/>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst HeroSlideItem = props => {\r\n\r\n    let hisrory = useHistory();\r\n\r\n    const item = props.item;\r\n\r\n    const background = apiConfig.originalImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\r\n\r\n    const setModalActive = async () => {\r\n        const modal = document.querySelector(`#modal_${item.id}`);\r\n\r\n        const videos = await tmdbApi.getVideos(category.movie, item.id);\r\n\r\n        if (videos.results.length > 0) {\r\n            const videSrc = 'https://www.youtube.com/embed/' + videos.results[0].key;\r\n            modal.querySelector('.modal__content > iframe').setAttribute('src', videSrc);\r\n        } else {\r\n            modal.querySelector('.modal__content').innerHTML = 'No trailer';\r\n        }\r\n\r\n        modal.classList.toggle('active');\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={`hero-slide__item ${props.className}`}\r\n            style={{backgroundImage: `url(${background})`}}\r\n        >\r\n            <div className=\"hero-slide__item__content container\">\r\n                <div className=\"hero-slide__item__content__info\">\r\n                    <h2 className=\"title\">{item.title}</h2>\r\n                    <div className=\"overview\">{item.overview}</div>\r\n                    <div className=\"btns\">\r\n                        <Button onClick={() => hisrory.push('/movie/' + item.id)}>\r\n                            Watch now\r\n                        </Button>\r\n                        <OutlineButton onClick={setModalActive}>\r\n                            Watch trailer\r\n                        </OutlineButton>\r\n                    </div>\r\n                </div>\r\n                <div className=\"hero-slide__item__content__poster\">\r\n                    <img src={apiConfig.w500Image(item.poster_path)} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TrailerModal = props => {\r\n    const item = props.item;\r\n\r\n    const iframeRef = useRef(null);\r\n\r\n    const onClose = () => iframeRef.current.setAttribute('src', '');\r\n\r\n    return (\r\n        <Modal active={false} id={`modal_${item.id}`}>\r\n            <ModalContent onClose={onClose}>\r\n                <iframe ref={iframeRef} width=\"100%\" height=\"500px\" title=\"trailer\"></iframe>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default HeroSlide;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}